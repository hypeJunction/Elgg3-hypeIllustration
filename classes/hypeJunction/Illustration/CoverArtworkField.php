<?php

namespace hypeJunction\Illustration;

use ElggEntity;
use hypeJunction\Fields\Field;
use Symfony\Component\HttpFoundation\ParameterBag;

class CoverArtworkField extends Field {

	public function isVisible(ElggEntity $entity, $context = null) {
		$params = [
			'entity' => $entity,
		];

		$enabled = elgg()->hooks->trigger(
			'uses:cover',
			"$entity->type:$entity->subtype",
			$params,
			false
		);

		if (!$enabled) {
			return false;
		}

		return parent::isVisible($entity, $context); // TODO: Change the autogenerated stub
	}

	public function save(ElggEntity $entity, ParameterBag $parameters) {
		$value = $parameters->get($this->name);

		$uid = elgg_extract('uid', $value);

		if ($uid) {
			$photo = elgg()->{'posts.illustrations'}->get($uid);
			/* @var $photo \Crew\Unsplash\Photo */

			$photo->download();

			$entity->{'cover:uid'} = "unsplash:$photo->id";
			$entity->{'cover:file_url'} = $photo->urls['full'];
			$entity->{'cover:thumb_url'} = $photo->urls['regular'];
			$entity->{'cover:color'} = $photo->color;
			$entity->{'cover:width'} = $photo->width;
			$entity->{'cover:height'} = $photo->height;
			$entity->{'cover:provider'} = 'Unsplash';
			$entity->{'cover:provider_url'} = $photo->links['html'];
			$entity->{'cover:author'} = $photo->user['name'];
			$entity->{'cover:author_url'} = $photo->user['portfolio_url'];

			$entity->{'cover:gravity'} = elgg_extract('gravity', $value, 'center');
			$entity->{'cover:ratio'} = elgg_extract('ratio', $value, 40);
		}
	}

	function retrieve(ElggEntity $entity) {
		if (!$entity->{'cover:uid'}) {
			return null;
		}

		list($prefix, $id) = explode(':', $entity->{'cover:uid'});
		if ($prefix !== 'unsplash') {
			return null;
		}

		return [
			'cover' => elgg()->{'posts.post'}->getCover($entity),
			'uid' => $id,
			'ratio' => $entity->{'cover:ratio'} ? : 40,
			'gravity' => $entity->{'cover:gravity'} ? : 'center',
		];
	}
}
